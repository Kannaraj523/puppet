cat site.pp 
+++
node 'client.example.com'{
     
    file{'/info.txt':
    ensure => 'present',
    content => "created by puppet",
      }
}
++
puppet parser validate site.pp #to check errors


node 'client.example.com'{
     
    file{'/info.txt':
    ensure => 'present',
    content => "created by puppet",
      }
    package{'httpd':
    ensure => 'present',
         }
}

+++++
#cat site.pp 
node 'client.example.com'{
     
    file{'/info.txt':
    ensure => 'present',
    content => "created by puppet",
      }
    package{'httpd':
    ensure => 'present',
         }
    service{'httpd':
    ensure => 'running',
    enable => true,
          }
}




node 'client2.example.com'{
     
    file{'/info.txt':
    ensure => 'present',
    content => "created by puppet",
      }
    package{'httpd':
    ensure => 'present',
         }
    service{'httpd':
    ensure => 'running',
    enable => true,
          }
}

+++
CLASSES
++



node 'client.example.com'{
      class{'linux':}
      }
node 'client2.example.com'{
      class{'linux':}
      }
class linux{     
    file{'/info.txt':
    ensure => 'present',
    content => "created by puppet",
      }
    package{'httpd':
    ensure => 'present',
         }
    service{'httpd':
    ensure => 'running',
    enable => true,
          }
}

++++

#puppet parser validate site.pp         #to check errors

on agent run

 puppet agent -t
Info: Retrieving pluginfacts
Info: Retrieving plugin
Info: Caching catalog for client.example.com
Info: Applying configuration version '1594882048'
Notice: /Stage[main]/Main/Node[client.example.com]/Service[httpd]/ensure: ensure changed 'stopped' to 'running'
Info: /Stage[main]/Main/Node[client.example.com]/Service[httpd]: Unscheduling refresh on Service[httpd]
Notice: Finished catalog run in 0.26 seconds

####################
[root@master manifests]# cat site.pp 

node 'client.example.com'{
      class{'linux':}
      }
node 'client2.example.com'{
      class{'linux':}
      }
class linux{ 
    $admintools=['git','vim','wget']
    package{$admintools:
    ensure => true,
          }    
    file{'/info.txt':
    ensure => 'present',
    content => "created by puppet",
      }
    package{'httpd':
    ensure => 'present',
         }
    service{'httpd':
    ensure => 'running',
    enable => true,
          }
}
#######################

ENVIROMENT isolation

[root@master environments]# pwd
/etc/puppetlabs/code/environments
 create testing  env and copy mainfests and modules dir
 and create site.pp
 ++
 on agent add env as testing
 cat /etc/puppetlabs/puppet/puppet.conf
 server=master.example.com
environment=testing

 ##########
 
 MODULES
 
 [root@master modules]# pwd
/etc/puppetlabs/code/environments/testing/modules
[root@master modules]# 

puppet module generate sai-demomodule --environment testing

cd demomodule/demomodule/manifests/

vi init.pp                    ###append at end below lines

class demomodule {
   package{'php-mysql':,
   ensure => 'present',
          }
   package{'php-xml':,
   ensure => 'present',
         }
}
}

#check syntax errors   and go to main site.pp and call this modules

[root@master manifests]# cat site.pp 

node 'client.example.com'{
      class{'linux':}
      }
    class{'demomodule':}                                                      ####### module is called###
     
node 'client2.example.com'{
      class{'linux':}
      }
class linux{ 
    file{'/info2.txt':
    ensure => 'present',
    content => "created by puppet",
      }
    package{'httpd':
    ensure => 'present',
         }
    service{'httpd':
    ensure => 'running',
    enable => true,
          }
}

#check errors puppet parser validate site.pp and check on agent puppet agent -t





